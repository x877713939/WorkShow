<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'oauth2.server' shared service.

return $this->services['oauth2.server'] = new \OAuth2\Server(['client_credentials' => ${($_ = isset($this->services['oauth2.storage.client_credentials']) ? $this->services['oauth2.storage.client_credentials'] : $this->load('getOauth2_Storage_ClientCredentialsService.php')) && false ?: '_'}, 'access_token' => ${($_ = isset($this->services['oauth2.storage.access_token']) ? $this->services['oauth2.storage.access_token'] : $this->load('getOauth2_Storage_AccessTokenService.php')) && false ?: '_'}, 'authorization_code' => ${($_ = isset($this->services['oauth2.storage.authorization_code']) ? $this->services['oauth2.storage.authorization_code'] : $this->load('getOauth2_Storage_AuthorizationCodeService.php')) && false ?: '_'}, 'user_credentials' => ${($_ = isset($this->services['oauth2.storage.user_credentials']) ? $this->services['oauth2.storage.user_credentials'] : ($this->services['oauth2.storage.user_credentials'] = new \AppBundle\Component\OAuthServer\Storage\UserCredentials($this))) && false ?: '_'}, 'refresh_token' => ${($_ = isset($this->services['oauth2.storage.refresh_token']) ? $this->services['oauth2.storage.refresh_token'] : $this->load('getOauth2_Storage_RefreshTokenService.php')) && false ?: '_'}, 'scope' => ${($_ = isset($this->services['oauth2.storage.scope']) ? $this->services['oauth2.storage.scope'] : $this->load('getOauth2_Storage_ScopeService.php')) && false ?: '_'}, 'public_key' => ${($_ = isset($this->services['oauth2.storage.public_key']) ? $this->services['oauth2.storage.public_key'] : ($this->services['oauth2.storage.public_key'] = new \OAuth2\Storage\Memory())) && false ?: '_'}, 'user_claims' => ${($_ = isset($this->services['oauth2.storage.user_claims']) ? $this->services['oauth2.storage.user_claims'] : ($this->services['oauth2.storage.user_claims'] = new \OAuth2\Storage\Memory())) && false ?: '_'}], []);
