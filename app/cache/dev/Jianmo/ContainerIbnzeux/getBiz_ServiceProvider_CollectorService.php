<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'biz.service_provider.collector' shared service.

$this->services['biz.service_provider.collector'] = $instance = new \Biz\ServiceProviderCollector();

$instance->add(${($_ = isset($this->services['activity.extension']) ? $this->services['activity.extension'] : $this->load('getActivity_ExtensionService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['callback.extension']) ? $this->services['callback.extension'] : $this->load('getCallback_ExtensionService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['copy.extension']) ? $this->services['copy.extension'] : $this->load('getCopy_ExtensionService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['coupon_service_provider']) ? $this->services['coupon_service_provider'] : $this->load('getCouponServiceProviderService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['course.extension']) ? $this->services['course.extension'] : $this->load('getCourse_ExtensionService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['custom.activity.extension']) ? $this->services['custom.activity.extension'] : $this->load('getCustom_Activity_ExtensionService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['mail_service_provider']) ? $this->services['mail_service_provider'] : $this->load('getMailServiceProviderService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['newcomer_task.extension']) ? $this->services['newcomer_task.extension'] : $this->load('getNewcomerTask_ExtensionService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['payment.extension']) ? $this->services['payment.extension'] : $this->load('getPayment_ExtensionService.php')) && false ?: '_'});
$instance->add(${($_ = isset($this->services['question.extension']) ? $this->services['question.extension'] : $this->load('getQuestion_ExtensionService.php')) && false ?: '_'});

return $instance;
