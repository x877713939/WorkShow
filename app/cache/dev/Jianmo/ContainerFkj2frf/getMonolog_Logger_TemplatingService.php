<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'monolog.logger.templating' shared service.

$this->services['monolog.logger.templating'] = $instance = new \Symfony\Bridge\Monolog\Logger('templating');

$instance->pushProcessor(${($_ = isset($this->services['monolog.processor.trace_processor']) ? $this->services['monolog.processor.trace_processor'] : ($this->services['monolog.processor.trace_processor'] = new \AppBundle\Processor\TraceProcessor())) && false ?: '_'});
$instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : ($this->services['debug.log_processor'] = new \Symfony\Bridge\Monolog\Processor\DebugProcessor())) && false ?: '_'});
$instance->pushHandler(${($_ = isset($this->services['monolog.handler.firephp']) ? $this->services['monolog.handler.firephp'] : $this->getMonolog_Handler_FirephpService()) && false ?: '_'});
$instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->getMonolog_Handler_MainService()) && false ?: '_'});

return $instance;
